set -g default-terminal "xterm-256color"

# set -g default-terminal "screen-256color"
# Enables a true-color support in Tmux
set-option -ga terminal-overrides ",xterm-256color:Tc"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix M-a
bind-key M-a send-prefix

# No delay for ESC key
set -sg escape-time 0

# split panes using i and -
bind i split-window -h
bind - split-window -v
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# Re-bind last window command
bind b last-window

# Number of lines of history to remember
set-option -g history-limit 100000

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# The window (GUI) title of the terminal will be based on the curent tmux window
set-option -g set-titles on
set-option -g set-titles-string "#T - #W"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h'  if-shell "$is_vim" 'send-keys M-h'     'select-pane -L'
bind-key -n 'M-j'  if-shell "$is_vim" 'send-keys M-j'     'select-pane -D'
bind-key -n 'M-k'  if-shell "$is_vim" 'send-keys M-k'     'select-pane -U'
bind-key -n 'M-l'  if-shell "$is_vim" 'send-keys M-l'     'select-pane -R'
bind-key -n 'M-ö'  if-shell "$is_vim" 'send-keys M-ö'     'select-pane -l'

# alt+m to maximize current split
bind-key -n 'M-m'  resize-pane -Z

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-¨' select-pane -l

# Pane resizing.
bind-key -n 'M-H'  if-shell "$is_vim" 'send-keys M-H'     'resize-pane -L 5'
bind-key -n 'M-J'  if-shell "$is_vim" 'send-keys M-J'     'resize-pane -D 5'
bind-key -n 'M-K'  if-shell "$is_vim" 'send-keys M-K'     'resize-pane -U 5'
bind-key -n 'M-L'  if-shell "$is_vim" 'send-keys M-L'     'resize-pane -R 5'

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Use vi key bindings in copy mode.
set -g mode-keys vi
# vim mode for keys (i for insert, esc, etc)
set-window-option -g mode-keys vi
# Enter copy mode bi hitting alt-y
bind-key -n 'M-y' copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# Pasting by hitting alt-p
bind-key -n 'M-p' paste-buffer

setw -g window-status-current-format '#{?window_zoomed_flag,#[fg=red],}#F#I [#W] '

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'

set -g @dracula-show-powerline true

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, weather, time
set -g @dracula-plugins "cpu-usage ram-usage"

run '~/.tmux/plugins/tpm/tpm'
